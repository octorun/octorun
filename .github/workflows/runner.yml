name: runner
on:
  push:
    branches:
      - main
    paths:
      - "runner/**"
  pull_request:
    branches:
      - main
    paths:
      - "runner/**"
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"
jobs:
  build-image:
    runs-on: ubuntu-latest
    outputs:
      RUNNER_VERSION: ${{ steps.find-runner-release.outputs.RUNNER_VERSION }}
      RUNNER_SEMANTIC_VERSION: ${{ steps.find-runner-release.outputs.RUNNER_SEMANTIC_VERSION }}
    steps:
      - uses: actions/checkout@v2
      - id: find-runner-release
        name: Find runner release
        uses: actions/github-script@v6
        with:
          script: |
            const releases = await github.rest.repos.listReleases({
                owner: "actions",
                repo: "runner",
                per_page: 1,
                page: 1
            })

            const releaseLatest = releases.data.shift()
            core.setOutput("RUNNER_VERSION", releaseLatest.name)
            core.setOutput("RUNNER_SEMANTIC_VERSION", releaseLatest.name.replace(/^(v)/,""))
      - id: build-image
        name: Build Image
        uses: redhat-actions/buildah-build@v2
        with:
          image: runner
          tags: latest ${{ steps.find-runner-release.outputs.RUNNER_VERSION }}
          build-args: |
            RUNNER_VERSION=${{ steps.find-runner-release.outputs.RUNNER_VERSION }}
            RUNNER_SEMANTIC_VERSION=${{ steps.find-runner-release.outputs.RUNNER_SEMANTIC_VERSION }}
          context: runner
          containerfiles: |
            ./runner/Dockerfile
      - name: Push to Registry
        if: ${{ github.event_name == 'push' || github.event_name == 'schedule' }}
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ secrets.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
  build-image-dockerd:
    runs-on: ubuntu-latest
    needs: [build-image]
    steps:
      - uses: actions/checkout@v2
      - id: build-image
        name: Build Image
        uses: redhat-actions/buildah-build@v2
        with:
          image: runner-dockerd
          tags: latest ${{ needs.build-image.outputs.RUNNER_VERSION }}
          context: runner/dockerd
          containerfiles: |
            ./runner/dockerd/Dockerfile
      - name: Push to Registry
        if: ${{ github.event_name == 'push' || github.event_name == 'schedule' }}
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ secrets.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
