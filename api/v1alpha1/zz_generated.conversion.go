//go:build !ignore_autogenerated_conversions
// +build !ignore_autogenerated_conversions

/*
Copyright 2022 The Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	v1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	v1alpha2 "octorun.github.io/octorun/api/v1alpha2"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*Runner)(nil), (*v1alpha2.Runner)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Runner_To_v1alpha2_Runner(a.(*Runner), b.(*v1alpha2.Runner), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.Runner)(nil), (*Runner)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_Runner_To_v1alpha1_Runner(a.(*v1alpha2.Runner), b.(*Runner), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RunnerImage)(nil), (*v1alpha2.RunnerImage)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_RunnerImage_To_v1alpha2_RunnerImage(a.(*RunnerImage), b.(*v1alpha2.RunnerImage), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.RunnerImage)(nil), (*RunnerImage)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_RunnerImage_To_v1alpha1_RunnerImage(a.(*v1alpha2.RunnerImage), b.(*RunnerImage), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RunnerList)(nil), (*v1alpha2.RunnerList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_RunnerList_To_v1alpha2_RunnerList(a.(*RunnerList), b.(*v1alpha2.RunnerList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.RunnerList)(nil), (*RunnerList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_RunnerList_To_v1alpha1_RunnerList(a.(*v1alpha2.RunnerList), b.(*RunnerList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RunnerPlacement)(nil), (*v1alpha2.RunnerPlacement)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_RunnerPlacement_To_v1alpha2_RunnerPlacement(a.(*RunnerPlacement), b.(*v1alpha2.RunnerPlacement), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.RunnerPlacement)(nil), (*RunnerPlacement)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_RunnerPlacement_To_v1alpha1_RunnerPlacement(a.(*v1alpha2.RunnerPlacement), b.(*RunnerPlacement), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RunnerSet)(nil), (*v1alpha2.RunnerSet)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_RunnerSet_To_v1alpha2_RunnerSet(a.(*RunnerSet), b.(*v1alpha2.RunnerSet), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.RunnerSet)(nil), (*RunnerSet)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_RunnerSet_To_v1alpha1_RunnerSet(a.(*v1alpha2.RunnerSet), b.(*RunnerSet), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RunnerSetList)(nil), (*v1alpha2.RunnerSetList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_RunnerSetList_To_v1alpha2_RunnerSetList(a.(*RunnerSetList), b.(*v1alpha2.RunnerSetList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.RunnerSetList)(nil), (*RunnerSetList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_RunnerSetList_To_v1alpha1_RunnerSetList(a.(*v1alpha2.RunnerSetList), b.(*RunnerSetList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RunnerSetSpec)(nil), (*v1alpha2.RunnerSetSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_RunnerSetSpec_To_v1alpha2_RunnerSetSpec(a.(*RunnerSetSpec), b.(*v1alpha2.RunnerSetSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RunnerSetStatus)(nil), (*v1alpha2.RunnerSetStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_RunnerSetStatus_To_v1alpha2_RunnerSetStatus(a.(*RunnerSetStatus), b.(*v1alpha2.RunnerSetStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RunnerSpec)(nil), (*v1alpha2.RunnerSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_RunnerSpec_To_v1alpha2_RunnerSpec(a.(*RunnerSpec), b.(*v1alpha2.RunnerSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RunnerStatus)(nil), (*v1alpha2.RunnerStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_RunnerStatus_To_v1alpha2_RunnerStatus(a.(*RunnerStatus), b.(*v1alpha2.RunnerStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.RunnerStatus)(nil), (*RunnerStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_RunnerStatus_To_v1alpha1_RunnerStatus(a.(*v1alpha2.RunnerStatus), b.(*RunnerStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RunnerTemplateSpec)(nil), (*v1alpha2.RunnerTemplateSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_RunnerTemplateSpec_To_v1alpha2_RunnerTemplateSpec(a.(*RunnerTemplateSpec), b.(*v1alpha2.RunnerTemplateSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.RunnerTemplateSpec)(nil), (*RunnerTemplateSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_RunnerTemplateSpec_To_v1alpha1_RunnerTemplateSpec(a.(*v1alpha2.RunnerTemplateSpec), b.(*RunnerTemplateSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1alpha2.RunnerSetSpec)(nil), (*RunnerSetSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_RunnerSetSpec_To_v1alpha1_RunnerSetSpec(a.(*v1alpha2.RunnerSetSpec), b.(*RunnerSetSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1alpha2.RunnerSetStatus)(nil), (*RunnerSetStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_RunnerSetStatus_To_v1alpha1_RunnerSetStatus(a.(*v1alpha2.RunnerSetStatus), b.(*RunnerSetStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1alpha2.RunnerSpec)(nil), (*RunnerSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_RunnerSpec_To_v1alpha1_RunnerSpec(a.(*v1alpha2.RunnerSpec), b.(*RunnerSpec), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_Runner_To_v1alpha2_Runner(in *Runner, out *v1alpha2.Runner, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_RunnerSpec_To_v1alpha2_RunnerSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_RunnerStatus_To_v1alpha2_RunnerStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Runner_To_v1alpha2_Runner is an autogenerated conversion function.
func Convert_v1alpha1_Runner_To_v1alpha2_Runner(in *Runner, out *v1alpha2.Runner, s conversion.Scope) error {
	return autoConvert_v1alpha1_Runner_To_v1alpha2_Runner(in, out, s)
}

func autoConvert_v1alpha2_Runner_To_v1alpha1_Runner(in *v1alpha2.Runner, out *Runner, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha2_RunnerSpec_To_v1alpha1_RunnerSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_RunnerStatus_To_v1alpha1_RunnerStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha2_Runner_To_v1alpha1_Runner is an autogenerated conversion function.
func Convert_v1alpha2_Runner_To_v1alpha1_Runner(in *v1alpha2.Runner, out *Runner, s conversion.Scope) error {
	return autoConvert_v1alpha2_Runner_To_v1alpha1_Runner(in, out, s)
}

func autoConvert_v1alpha1_RunnerImage_To_v1alpha2_RunnerImage(in *RunnerImage, out *v1alpha2.RunnerImage, s conversion.Scope) error {
	out.Name = in.Name
	out.PullPolicy = v1.PullPolicy(in.PullPolicy)
	out.PullSecrets = *(*[]v1.LocalObjectReference)(unsafe.Pointer(&in.PullSecrets))
	return nil
}

// Convert_v1alpha1_RunnerImage_To_v1alpha2_RunnerImage is an autogenerated conversion function.
func Convert_v1alpha1_RunnerImage_To_v1alpha2_RunnerImage(in *RunnerImage, out *v1alpha2.RunnerImage, s conversion.Scope) error {
	return autoConvert_v1alpha1_RunnerImage_To_v1alpha2_RunnerImage(in, out, s)
}

func autoConvert_v1alpha2_RunnerImage_To_v1alpha1_RunnerImage(in *v1alpha2.RunnerImage, out *RunnerImage, s conversion.Scope) error {
	out.Name = in.Name
	out.PullPolicy = v1.PullPolicy(in.PullPolicy)
	out.PullSecrets = *(*[]v1.LocalObjectReference)(unsafe.Pointer(&in.PullSecrets))
	return nil
}

// Convert_v1alpha2_RunnerImage_To_v1alpha1_RunnerImage is an autogenerated conversion function.
func Convert_v1alpha2_RunnerImage_To_v1alpha1_RunnerImage(in *v1alpha2.RunnerImage, out *RunnerImage, s conversion.Scope) error {
	return autoConvert_v1alpha2_RunnerImage_To_v1alpha1_RunnerImage(in, out, s)
}

func autoConvert_v1alpha1_RunnerList_To_v1alpha2_RunnerList(in *RunnerList, out *v1alpha2.RunnerList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]v1alpha2.Runner, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Runner_To_v1alpha2_Runner(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_RunnerList_To_v1alpha2_RunnerList is an autogenerated conversion function.
func Convert_v1alpha1_RunnerList_To_v1alpha2_RunnerList(in *RunnerList, out *v1alpha2.RunnerList, s conversion.Scope) error {
	return autoConvert_v1alpha1_RunnerList_To_v1alpha2_RunnerList(in, out, s)
}

func autoConvert_v1alpha2_RunnerList_To_v1alpha1_RunnerList(in *v1alpha2.RunnerList, out *RunnerList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Runner, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_Runner_To_v1alpha1_Runner(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha2_RunnerList_To_v1alpha1_RunnerList is an autogenerated conversion function.
func Convert_v1alpha2_RunnerList_To_v1alpha1_RunnerList(in *v1alpha2.RunnerList, out *RunnerList, s conversion.Scope) error {
	return autoConvert_v1alpha2_RunnerList_To_v1alpha1_RunnerList(in, out, s)
}

func autoConvert_v1alpha1_RunnerPlacement_To_v1alpha2_RunnerPlacement(in *RunnerPlacement, out *v1alpha2.RunnerPlacement, s conversion.Scope) error {
	out.NodeSelector = *(*map[string]string)(unsafe.Pointer(&in.NodeSelector))
	out.Tolerations = *(*[]v1.Toleration)(unsafe.Pointer(&in.Tolerations))
	out.Affinity = (*v1.Affinity)(unsafe.Pointer(in.Affinity))
	return nil
}

// Convert_v1alpha1_RunnerPlacement_To_v1alpha2_RunnerPlacement is an autogenerated conversion function.
func Convert_v1alpha1_RunnerPlacement_To_v1alpha2_RunnerPlacement(in *RunnerPlacement, out *v1alpha2.RunnerPlacement, s conversion.Scope) error {
	return autoConvert_v1alpha1_RunnerPlacement_To_v1alpha2_RunnerPlacement(in, out, s)
}

func autoConvert_v1alpha2_RunnerPlacement_To_v1alpha1_RunnerPlacement(in *v1alpha2.RunnerPlacement, out *RunnerPlacement, s conversion.Scope) error {
	out.NodeSelector = *(*map[string]string)(unsafe.Pointer(&in.NodeSelector))
	out.Tolerations = *(*[]v1.Toleration)(unsafe.Pointer(&in.Tolerations))
	out.Affinity = (*v1.Affinity)(unsafe.Pointer(in.Affinity))
	return nil
}

// Convert_v1alpha2_RunnerPlacement_To_v1alpha1_RunnerPlacement is an autogenerated conversion function.
func Convert_v1alpha2_RunnerPlacement_To_v1alpha1_RunnerPlacement(in *v1alpha2.RunnerPlacement, out *RunnerPlacement, s conversion.Scope) error {
	return autoConvert_v1alpha2_RunnerPlacement_To_v1alpha1_RunnerPlacement(in, out, s)
}

func autoConvert_v1alpha1_RunnerSet_To_v1alpha2_RunnerSet(in *RunnerSet, out *v1alpha2.RunnerSet, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_RunnerSetSpec_To_v1alpha2_RunnerSetSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_RunnerSetStatus_To_v1alpha2_RunnerSetStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_RunnerSet_To_v1alpha2_RunnerSet is an autogenerated conversion function.
func Convert_v1alpha1_RunnerSet_To_v1alpha2_RunnerSet(in *RunnerSet, out *v1alpha2.RunnerSet, s conversion.Scope) error {
	return autoConvert_v1alpha1_RunnerSet_To_v1alpha2_RunnerSet(in, out, s)
}

func autoConvert_v1alpha2_RunnerSet_To_v1alpha1_RunnerSet(in *v1alpha2.RunnerSet, out *RunnerSet, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha2_RunnerSetSpec_To_v1alpha1_RunnerSetSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_RunnerSetStatus_To_v1alpha1_RunnerSetStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha2_RunnerSet_To_v1alpha1_RunnerSet is an autogenerated conversion function.
func Convert_v1alpha2_RunnerSet_To_v1alpha1_RunnerSet(in *v1alpha2.RunnerSet, out *RunnerSet, s conversion.Scope) error {
	return autoConvert_v1alpha2_RunnerSet_To_v1alpha1_RunnerSet(in, out, s)
}

func autoConvert_v1alpha1_RunnerSetList_To_v1alpha2_RunnerSetList(in *RunnerSetList, out *v1alpha2.RunnerSetList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]v1alpha2.RunnerSet, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_RunnerSet_To_v1alpha2_RunnerSet(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_RunnerSetList_To_v1alpha2_RunnerSetList is an autogenerated conversion function.
func Convert_v1alpha1_RunnerSetList_To_v1alpha2_RunnerSetList(in *RunnerSetList, out *v1alpha2.RunnerSetList, s conversion.Scope) error {
	return autoConvert_v1alpha1_RunnerSetList_To_v1alpha2_RunnerSetList(in, out, s)
}

func autoConvert_v1alpha2_RunnerSetList_To_v1alpha1_RunnerSetList(in *v1alpha2.RunnerSetList, out *RunnerSetList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RunnerSet, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_RunnerSet_To_v1alpha1_RunnerSet(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha2_RunnerSetList_To_v1alpha1_RunnerSetList is an autogenerated conversion function.
func Convert_v1alpha2_RunnerSetList_To_v1alpha1_RunnerSetList(in *v1alpha2.RunnerSetList, out *RunnerSetList, s conversion.Scope) error {
	return autoConvert_v1alpha2_RunnerSetList_To_v1alpha1_RunnerSetList(in, out, s)
}

func autoConvert_v1alpha1_RunnerSetSpec_To_v1alpha2_RunnerSetSpec(in *RunnerSetSpec, out *v1alpha2.RunnerSetSpec, s conversion.Scope) error {
	out.Runners = (*int32)(unsafe.Pointer(in.Runners))
	out.Selector = in.Selector
	if err := Convert_v1alpha1_RunnerTemplateSpec_To_v1alpha2_RunnerTemplateSpec(&in.Template, &out.Template, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_RunnerSetSpec_To_v1alpha2_RunnerSetSpec is an autogenerated conversion function.
func Convert_v1alpha1_RunnerSetSpec_To_v1alpha2_RunnerSetSpec(in *RunnerSetSpec, out *v1alpha2.RunnerSetSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_RunnerSetSpec_To_v1alpha2_RunnerSetSpec(in, out, s)
}

func autoConvert_v1alpha2_RunnerSetSpec_To_v1alpha1_RunnerSetSpec(in *v1alpha2.RunnerSetSpec, out *RunnerSetSpec, s conversion.Scope) error {
	out.Runners = (*int32)(unsafe.Pointer(in.Runners))
	out.Selector = in.Selector
	// WARNING: in.UpdateStrategy requires manual conversion: does not exist in peer-type
	// WARNING: in.RevisionHistoryLimit requires manual conversion: does not exist in peer-type
	if err := Convert_v1alpha2_RunnerTemplateSpec_To_v1alpha1_RunnerTemplateSpec(&in.Template, &out.Template, s); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_RunnerSetStatus_To_v1alpha2_RunnerSetStatus(in *RunnerSetStatus, out *v1alpha2.RunnerSetStatus, s conversion.Scope) error {
	out.Runners = in.Runners
	out.IdleRunners = in.IdleRunners
	out.ActiveRunners = in.ActiveRunners
	out.Conditions = *(*[]metav1.Condition)(unsafe.Pointer(&in.Conditions))
	out.Selector = in.Selector
	return nil
}

// Convert_v1alpha1_RunnerSetStatus_To_v1alpha2_RunnerSetStatus is an autogenerated conversion function.
func Convert_v1alpha1_RunnerSetStatus_To_v1alpha2_RunnerSetStatus(in *RunnerSetStatus, out *v1alpha2.RunnerSetStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_RunnerSetStatus_To_v1alpha2_RunnerSetStatus(in, out, s)
}

func autoConvert_v1alpha2_RunnerSetStatus_To_v1alpha1_RunnerSetStatus(in *v1alpha2.RunnerSetStatus, out *RunnerSetStatus, s conversion.Scope) error {
	out.Runners = in.Runners
	out.IdleRunners = in.IdleRunners
	out.ActiveRunners = in.ActiveRunners
	// WARNING: in.CurrentRevision requires manual conversion: does not exist in peer-type
	// WARNING: in.NextRevision requires manual conversion: does not exist in peer-type
	// WARNING: in.CollisionCount requires manual conversion: does not exist in peer-type
	out.Conditions = *(*[]metav1.Condition)(unsafe.Pointer(&in.Conditions))
	out.Selector = in.Selector
	return nil
}

func autoConvert_v1alpha1_RunnerSpec_To_v1alpha2_RunnerSpec(in *RunnerSpec, out *v1alpha2.RunnerSpec, s conversion.Scope) error {
	out.URL = in.URL
	out.ID = (*int64)(unsafe.Pointer(in.ID))
	out.OS = in.OS
	out.Group = in.Group
	out.Workdir = in.Workdir
	if err := Convert_v1alpha1_RunnerImage_To_v1alpha2_RunnerImage(&in.Image, &out.Image, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_RunnerPlacement_To_v1alpha2_RunnerPlacement(&in.Placement, &out.Placement, s); err != nil {
		return err
	}
	out.Resources = in.Resources
	out.ServiceAccountName = in.ServiceAccountName
	out.SecurityContext = (*v1.SecurityContext)(unsafe.Pointer(in.SecurityContext))
	out.RuntimeClassName = (*string)(unsafe.Pointer(in.RuntimeClassName))
	out.Volumes = *(*[]v1.Volume)(unsafe.Pointer(&in.Volumes))
	out.VolumeMounts = *(*[]v1.VolumeMount)(unsafe.Pointer(&in.VolumeMounts))
	return nil
}

// Convert_v1alpha1_RunnerSpec_To_v1alpha2_RunnerSpec is an autogenerated conversion function.
func Convert_v1alpha1_RunnerSpec_To_v1alpha2_RunnerSpec(in *RunnerSpec, out *v1alpha2.RunnerSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_RunnerSpec_To_v1alpha2_RunnerSpec(in, out, s)
}

func autoConvert_v1alpha2_RunnerSpec_To_v1alpha1_RunnerSpec(in *v1alpha2.RunnerSpec, out *RunnerSpec, s conversion.Scope) error {
	out.URL = in.URL
	out.ID = (*int64)(unsafe.Pointer(in.ID))
	out.OS = in.OS
	out.Group = in.Group
	out.Workdir = in.Workdir
	if err := Convert_v1alpha2_RunnerImage_To_v1alpha1_RunnerImage(&in.Image, &out.Image, s); err != nil {
		return err
	}
	// WARNING: in.EvictionPolicy requires manual conversion: does not exist in peer-type
	if err := Convert_v1alpha2_RunnerPlacement_To_v1alpha1_RunnerPlacement(&in.Placement, &out.Placement, s); err != nil {
		return err
	}
	out.Resources = in.Resources
	out.ServiceAccountName = in.ServiceAccountName
	out.SecurityContext = (*v1.SecurityContext)(unsafe.Pointer(in.SecurityContext))
	out.RuntimeClassName = (*string)(unsafe.Pointer(in.RuntimeClassName))
	out.Volumes = *(*[]v1.Volume)(unsafe.Pointer(&in.Volumes))
	out.VolumeMounts = *(*[]v1.VolumeMount)(unsafe.Pointer(&in.VolumeMounts))
	return nil
}

func autoConvert_v1alpha1_RunnerStatus_To_v1alpha2_RunnerStatus(in *RunnerStatus, out *v1alpha2.RunnerStatus, s conversion.Scope) error {
	out.Phase = v1alpha2.RunnerPhase(in.Phase)
	out.Conditions = *(*[]metav1.Condition)(unsafe.Pointer(&in.Conditions))
	return nil
}

// Convert_v1alpha1_RunnerStatus_To_v1alpha2_RunnerStatus is an autogenerated conversion function.
func Convert_v1alpha1_RunnerStatus_To_v1alpha2_RunnerStatus(in *RunnerStatus, out *v1alpha2.RunnerStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_RunnerStatus_To_v1alpha2_RunnerStatus(in, out, s)
}

func autoConvert_v1alpha2_RunnerStatus_To_v1alpha1_RunnerStatus(in *v1alpha2.RunnerStatus, out *RunnerStatus, s conversion.Scope) error {
	out.Phase = RunnerPhase(in.Phase)
	out.Conditions = *(*[]metav1.Condition)(unsafe.Pointer(&in.Conditions))
	return nil
}

// Convert_v1alpha2_RunnerStatus_To_v1alpha1_RunnerStatus is an autogenerated conversion function.
func Convert_v1alpha2_RunnerStatus_To_v1alpha1_RunnerStatus(in *v1alpha2.RunnerStatus, out *RunnerStatus, s conversion.Scope) error {
	return autoConvert_v1alpha2_RunnerStatus_To_v1alpha1_RunnerStatus(in, out, s)
}

func autoConvert_v1alpha1_RunnerTemplateSpec_To_v1alpha2_RunnerTemplateSpec(in *RunnerTemplateSpec, out *v1alpha2.RunnerTemplateSpec, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_RunnerSpec_To_v1alpha2_RunnerSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_RunnerTemplateSpec_To_v1alpha2_RunnerTemplateSpec is an autogenerated conversion function.
func Convert_v1alpha1_RunnerTemplateSpec_To_v1alpha2_RunnerTemplateSpec(in *RunnerTemplateSpec, out *v1alpha2.RunnerTemplateSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_RunnerTemplateSpec_To_v1alpha2_RunnerTemplateSpec(in, out, s)
}

func autoConvert_v1alpha2_RunnerTemplateSpec_To_v1alpha1_RunnerTemplateSpec(in *v1alpha2.RunnerTemplateSpec, out *RunnerTemplateSpec, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha2_RunnerSpec_To_v1alpha1_RunnerSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha2_RunnerTemplateSpec_To_v1alpha1_RunnerTemplateSpec is an autogenerated conversion function.
func Convert_v1alpha2_RunnerTemplateSpec_To_v1alpha1_RunnerTemplateSpec(in *v1alpha2.RunnerTemplateSpec, out *RunnerTemplateSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_RunnerTemplateSpec_To_v1alpha1_RunnerTemplateSpec(in, out, s)
}
